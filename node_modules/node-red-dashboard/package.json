{
  "_args": [
    [
      {
        "raw": "node-red-dashboard@~2.9.4",
        "scope": null,
        "escapedName": "node-red-dashboard",
        "name": "node-red-dashboard",
        "rawSpec": "~2.9.4",
        "spec": ">=2.9.4 <2.10.0",
        "type": "range"
      },
      "/home/pi/.node-red"
    ]
  ],
  "_from": "node-red-dashboard@>=2.9.4 <2.10.0",
  "_id": "node-red-dashboard@2.9.4",
  "_inCache": true,
  "_location": "/node-red-dashboard",
  "_nodeVersion": "8.11.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/node-red-dashboard_2.9.4_1527271911219_0.6524674730686608"
  },
  "_npmUser": {
    "name": "dceejay",
    "email": "ceejay@vnet.ibm.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "node-red-dashboard@~2.9.4",
    "scope": null,
    "escapedName": "node-red-dashboard",
    "name": "node-red-dashboard",
    "rawSpec": "~2.9.4",
    "spec": ">=2.9.4 <2.10.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-red-dashboard/-/node-red-dashboard-2.9.4.tgz",
  "_shasum": "118e99e401a9c1553d94f9e86bc2c6990ce9a9dc",
  "_shrinkwrap": null,
  "_spec": "node-red-dashboard@~2.9.4",
  "_where": "/home/pi/.node-red",
  "bugs": {
    "url": "https://github.com/node-red/node-red-dashboard/issues"
  },
  "contributors": [
    {
      "name": "Andrei Tatar"
    },
    {
      "name": "Dave Conway-Jones"
    },
    {
      "name": "Joe Pavitt"
    },
    {
      "name": "Nick O'Leary"
    },
    {
      "name": "Dan Cunnington"
    },
    {
      "name": "Laurence Stant"
    },
    {
      "name": "Camille Boissel"
    },
    {
      "name": "Hiroyasu Nishiyama"
    }
  ],
  "dependencies": {
    "serve-static": "~1.13.2",
    "socket.io": "^1.7.4"
  },
  "description": "A set of dashboard nodes for Node-RED",
  "devDependencies": {
    "angular": "~1.5.11",
    "angular-animate": "~1.5.11",
    "angular-aria": "~1.5.11",
    "angular-chart.js": "^1.1.1",
    "angular-material": "~1.1.9",
    "angular-material-icons": "^0.7.1",
    "angular-messages": "~1.5.11",
    "angular-mocks": "~1.5.11",
    "angular-route": "~1.5.11",
    "angular-sanitize": "~1.5.11",
    "angular-touch": "~1.5.11",
    "angularjs-color-picker": "^3.4.8",
    "chart.js": "~2.3.0",
    "d3": "^3.5.17",
    "font-awesome": "^4.7.0",
    "gulp": "^3.9.1",
    "gulp-angular-templatecache": "^2.2.0",
    "gulp-clean-css": "^3.9.3",
    "gulp-concat": "^2.6.1",
    "gulp-eol": "^0.2.0",
    "gulp-header": "^2.0.5",
    "gulp-html-replace": "^1.6.2",
    "gulp-html-src": "^1.0.0",
    "gulp-htmlmin": "^4.0.0",
    "gulp-if": "^2.0.2",
    "gulp-insert-lines": "0.0.4",
    "gulp-jscs": "^4.1.0",
    "gulp-jshint": "^2.1.0",
    "gulp-manifest": "^0.1.1",
    "gulp-remove-html": "^1.3.0",
    "gulp-replace": "^0.6.1",
    "gulp-resources": "^0.5.0",
    "gulp-uglify": "^3.0.0",
    "gulp-util": "^3.0.8",
    "jquery": "^3.3.1",
    "jshint": "^2.9.4",
    "justgage": "^1.2.2",
    "less": "^3.0.4",
    "moment": "~2.22.1",
    "sprintf-js": "^1.0.3",
    "streamqueue": "~1.1.2",
    "svg-morpheus": "^0.3.0",
    "tinycolor2": "^1.4.1",
    "weather-icons-lite": "^1.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-LewLaQkFBKjB9vCHia+wxZFLMMqmdVfoNWin4Q5eccPvt0bHJ+WPHjK/XJDVvEXGO8PppRxqk9DHgjTEh5WwQw==",
    "shasum": "118e99e401a9c1553d94f9e86bc2c6990ce9a9dc",
    "tarball": "https://registry.npmjs.org/node-red-dashboard/-/node-red-dashboard-2.9.4.tgz",
    "fileCount": 91,
    "unpackedSize": 3080748,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbCFHoCRA9TVsSAnZWagAAdC4P/00b2XM54m3Allbr1Z8v\n6wYhbf9mSUEk0DKvZB/VKNxzPoFWpeM1bBwr813EEAgo4Qrq2HFn37ub+5oz\nu6U/MI8wuTfE2aOfEQPDehKOApE6kDrmiEr4hRJO9S4kUxBLvCVekecVFrST\ntNgNMs2PTSvf6Hmuhed1Po0xacyk8y/rcftH7nD2nE4ocbvOps0IQAPgp2Kt\ng/WdAxZeGFYvwyEbtcakExcf9BxbTWG5ogKWmCG0N7SXuQcW9cxpZNq1olZr\nU5jqKU0jpuPh+TvJ7Tik99CC2yOJLxD5FaKAiKiW1WWhkVGQPorCcjS+1Yz7\nnly9YSVNhXDSGp2bWswS/Dma3PI2SOphxRJCsddDwSILKqefXuNyjpl3Fe1o\n+1er2SZlkdVBmkUnurbTbqT2eSyiBZcamKHbAWDa/PnDwywAdKX+wmCFe3t6\nqhtKAj+rmHMKtYfMgDqq9dD13xdG0yCt2IkrxDtoaCRKJSiD8EVrV86ko3Ww\n6Z2IbihLUkBf9TXD+EHxeirj9muDeclClcDgBeG3Ig/EatLorW+s4hWL53iX\nkZmFU7IrXuSU7gS20IuJYjxBdq+179iY6PMGX3D7bSqAGuUEcFyupLUyxTFe\nnIt0wlksq8hf1Wp+JvGgGD3NlJoT4GqXlEHxX+y+NwH4RuWjn6qD0pr35pon\nSAmQ\r\n=mYML\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "4e6246322885935a1ce27671bd28d77d8033decc",
  "homepage": "https://github.com/node-red/node-red-dashboard#readme",
  "keywords": [
    "node-red"
  ],
  "license": "Apache-2.0",
  "main": "none",
  "maintainers": [
    {
      "name": "dceejay",
      "email": "ceejay@vnet.ibm.com"
    }
  ],
  "name": "node-red-dashboard",
  "node-red": {
    "version": ">=0.14.0",
    "nodes": {
      "ui_base": "nodes/ui_base.js",
      "ui_button": "nodes/ui_button.js",
      "ui_dropdown": "nodes/ui_dropdown.js",
      "ui_switch": "nodes/ui_switch.js",
      "ui_slider": "nodes/ui_slider.js",
      "ui_numeric": "nodes/ui_numeric.js",
      "ui_text_input": "nodes/ui_text_input.js",
      "ui_date_picker": "nodes/ui_date_picker.js",
      "ui_colour_picker": "nodes/ui_colour_picker.js",
      "ui_form": "nodes/ui_form.js",
      "ui_text": "nodes/ui_text.js",
      "ui_gauge": "nodes/ui_gauge.js",
      "ui_chart": "nodes/ui_chart.js",
      "ui_audio": "nodes/ui_audio.js",
      "ui_toast": "nodes/ui_toast.js",
      "ui_ui_control": "nodes/ui_ui_control.js",
      "ui_template": "nodes/ui_template.js",
      "ui_link": "nodes/ui_link.js",
      "ui_tab": "nodes/ui_tab.js",
      "ui_group": "nodes/ui_group.js"
    }
  },
  "optionalDependencies": {},
  "readme": "# node-red-dashboard\n\n![NPM version](https://badge.fury.io/js/node-red-dashboard.svg)\n\nThis module provides a set of nodes in Node-RED to quickly create a live data\ndashboard.\n\nFor the latest updates see the [CHANGELOG.md](https://github.com/node-red/node-red-dashboard/blob/master/CHANGELOG.md)\n\n<img src=\"http://nodered.org/images/dashboarde.png\"/>\n\n## Pre-requisites\n\nNode-RED-Dashboard requires Node-RED version 0.14 or more recent.\n\n## Install\n\nTo install the stable version use the `Menu - Manage palette` option and search for `node-red-dashboard`, or run the following command in your Node-RED user directory (typically `~/.node-red`):\n\n    npm i node-red-dashboard\n\nOpen your Node-RED instance and you should have UI nodes available in the palette and a new `dashboard` tab in the\nright side panel. The UI interface is available at <http://localhost:1880/ui> (if the default settings are used).\n\nIf you want to try the latest version from github, you can install it by\n\n    npm i node-red/node-red-dashboard\n\n## Layout\n\nThe dashboard layout should be considered as a grid.\n\nEach **group** element has a width - by default 6 'units' (a unit is 48px wide by default with a 6px gap).\n\nEach **widget** in the group also has a width - by default, 'auto' which means it will fill the width of the group it is in, but you can set it to a fixed number of units.\n\nThe layout algorithm of the dashboard always tries to place items as high and to the left as they can within their container - this applies to how groups are positioned on the page, as well as how widgets are positioned in a group.\n\nGiven a group with width 6, if you add six widgets, each with a width of 2, then they will be laid out in two rows - three widgets in each.\n\nIf you add two groups of width 6, as long as your browser window is wide enough, they will sit alongside each other. If you shrink the browser, at some point the second group will shift to be below the first, in a column.\n\nIt is advisable to use multiple groups if possible, rather than one big group, so that the page can dynamically resize on smaller screens.\n\n## Features\n\n#### Dashboard sidebar\n\nThe widget layout is managed by a `dashboard` tab in the sidebar of the Node-RED editor.\n\n##### Layout\n\n - **Tabs** - From here you can re-order the tabs, groups and widgets, and add and edit their properties.\n\n - **Links** - to other web pages can also be added to the menu. They can optionally be opened in an iframe - if allowed by the target page.\n\n##### Theme\n\n - **Style** - the theme and font of the UI is set in the dashboard sidebar. You can select a default Light, Dark or Custom Theme. You cannot have different themes for each tab.\n\n##### Site\n\n - **Title** - the `title` of the UI page can be set.\n\n - **Options** - optionally hide the title bar, and allow swiping sideways between tabs on a touch screen.\n\n - **Sizes** - sets the basic geometry of the grid layout in pixels. The **width** and **height** of widgets can be set, as can the width of *groups*. These are the basic definitions of the \"units' used elsewhere within the dashboard.\n\n#### Widgets\n\nGroup labels are optional.\n\nMost widgets can have a label and value - both of these can be specified by properties of the incoming msg if required, and modified by angular filters. For example the label can be set to `{{msg.topic}}`, or the value could be set to `{{value | number:1}}%` to round the value to one decimal place and append a % sign.\n\nEach node may parse the `msg.payload` to make it suitable for display. This converted version is exposed as the variable called `value`, (see example above).  \n\nAny widget can be disabled by passing in a `msg.enabled` property set to `false;`. *Note:* this doesn't stop the widget receiving messages but does stop inputs being active and does re-style the widget.\n\nMost ui widgets can also be configured by using a `msg.ui_control` message - see **[config-fields.md](https://github.com/node-red/node-red-dashboard/blob/master/config-fields.md)**\nfor futher details.\n\n  - **Audio out** - a widget that will let you play audio (wav or mp3) or send Text to Speech (TTS) to the client.\n  - **Button** - the icon can be set using either Material or fa-icons - the colour and background colour may also be set. If the widget is sized to 1 wide the icon has precedence.\n  - **Chart** - has both line, bar and pie chart modes. Also the X-Axis labels can be customised using a date formatter string. See **[this document](https://github.com/node-red/node-red-dashboard/blob/master/Charts.md)** for more information on the chart data formats accepted.\n  - **Colour Picker** - a colour picker widget.\n  - **Date Picker** - a date picker widget. The displayed Date format can be specified in the Site tab using moment.js formatting.\n  - **Dropdown** - a dropdown select widget has been added. Multiple label, value pairs can be specified. The choices can also be set via `msg.options` containing an array of objects. If just text then the value will be the same as the label, otherwise you can specify both by using an object of \"label\":\"value\" pairs :\n\n        [ \"Choice 1\", \"Choice 2\", {\"Choice 3\": 3} ]\n\n     Setting `msg.payload` will pre-select the value in the dropdown.\n  - **Form** - a widget that can be composed of several sub-widgets. When submitted all values are submitted as a single message.\n  - **Gauge** - has 4 modes - *standard* (simple gauge), *donut* (complete 360&deg;), *compass*, and *wave*. You can also specify the colour range of the standard and donut gauges.\n  - **Notification** - creates alerts to the user - can either be a toast popup, or a dismissable alert box. The alert may be targeted to a single user.\n  - **Numeric** - a Numeric input widget with up/down buttons.\n  - **Slider** - a simple horizontal slider, with variable step size.\n  - **Switch** - can also set two icons and/or colours depending on state.\n  - **Template** - the template node allows the user to specify and create their own widgets within the framework using HTML, Javascript. This is an Angular.js widget. You may also use this to override the built in CSS styles.\n  - **Text** - A read only widget, the layout of the `label`, and `value` can be configured.\n  - **Text input** - text input box, with optional label, can also support password, email and colour modes.\n  - **UI-Control** - allows some dynamic control of the dashboard. Sending a `msg.payload` of the tab number (from 0) or tab_name will switch to that tab. Groups can be hidden and made visible via a msg like `{group:{hide:[\"tab_name_group_name_with_underscores\"],show:[\"tab_name_another_group\"],focus:true}}`. Outputs a `msg.payload` for every browser *connection* and *loss*, that can be used to trigger other actions.\n\n**Tip:** The *Text* widget will accept html - so you can use it together with the *fa-icons* we\nalready use to create indicator type widgets.\n\n## Securing the Dashboard\n\nYou can use the `httpNodeAuth` property in your Node-RED settings.js file to secure the Dashboard as it is\ncreated the same way as other HTTP nodes are. The details can be found at the bottom of this page in the\ndocs <http://nodered.org/docs/security>\n\n## Multiple Users\n\nThis Dashboard does NOT support multiple individual users. It is a view of the status of the underlying\nNode-RED flow, which itself is single user. If the state of the flow changes then all clients will get\nnotified of that change.\n\n## Discussions and suggestions\n\nUse the Node-RED google group: <https://groups.google.com/forum/#!forum/node-red>\nor the Dashboard-ui channel in <a href=\"http://nodered.org/slack/\">Slack</a>\n\nThe current work in progress list is shown in the\n<a href=\"https://github.com/node-red/node-red-dashboard/projects/1\" target=\"_blank\"> Github Project</a>.\n\n## Contributing\n\nBefore raising a pull-request, please read our\n[contributing guide](https://github.com/node-red/node-red-dashboard/blob/master/CONTRIBUTING.md).\n\nThis project adheres to the [Contributor Covenant 1.4](http://contributor-covenant.org/version/1/4/).\nBy participating, you are expected to uphold this code. Please report unacceptable\nbehavior to any of the [project's core team](https://github.com/orgs/node-red/teams/core).\n\n## Developers\n\n```\ncd ~\\.node-red\\node_modules\ngit clone https://github.com/node-red/node-red-dashboard.git\ncd node-red-dashboard\nnpm install\n```\nThe plugin uses the ```dist``` folder if it exists. Make sure it has been deleted if you want to use the non-minified version while developing.\nAfter finishing changes to the front-end code in the src folder, you can use ```gulp``` to update and rebuild the minified files and update the *appcache* manifest.\n\n    gulp\n\nWe also have suggested *lint* and *js* styles that can be checked with:\n\n    gulp lint\n    gulp jscs\n\nIf submitting a Pull Request (PR) please do NOT include the minified `/dist` files.\n\nThank you.\n\n<img src=\"http://nodered.org/images/dashboardl.png\"/>\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/node-red/node-red-dashboard.git"
  },
  "scripts": {
    "postinstall": "node fixfa.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "2.9.4"
}
