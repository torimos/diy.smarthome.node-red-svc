{
  "_args": [
    [
      {
        "raw": "prompt-list@^3.1.2",
        "scope": null,
        "escapedName": "prompt-list",
        "name": "prompt-list",
        "rawSpec": "^3.1.2",
        "spec": ">=3.1.2 <4.0.0",
        "type": "range"
      },
      "/home/pi/.node-red/node_modules/firmata/node_modules/serialport"
    ]
  ],
  "_from": "prompt-list@>=3.1.2 <4.0.0",
  "_id": "prompt-list@3.2.0",
  "_inCache": true,
  "_location": "/prompt-list",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/prompt-list_3.2.0_1527538263174_0.5338071041083554"
  },
  "_npmUser": {
    "name": "jonschlinkert",
    "email": "github@sellside.com"
  },
  "_npmVersion": "6.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "prompt-list@^3.1.2",
    "scope": null,
    "escapedName": "prompt-list",
    "name": "prompt-list",
    "rawSpec": "^3.1.2",
    "spec": ">=3.1.2 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/firmata/serialport",
    "/serialport"
  ],
  "_resolved": "https://registry.npmjs.org/prompt-list/-/prompt-list-3.2.0.tgz",
  "_shasum": "b33472e01677a5751f59094fa7fe20b09da9db94",
  "_shrinkwrap": null,
  "_spec": "prompt-list@^3.1.2",
  "_where": "/home/pi/.node-red/node_modules/firmata/node_modules/serialport",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "bugs": {
    "url": "https://github.com/enquirer/prompt-list/issues"
  },
  "contributors": [
    {
      "name": "Brian Woodward",
      "url": "https://twitter.com/doowb"
    },
    {
      "name": "Jon Schlinkert",
      "url": "http://twitter.com/jonschlinkert"
    },
    {
      "name": "Jose Albizures",
      "url": "https://twitter.com/albizures36"
    }
  ],
  "dependencies": {
    "ansi-cyan": "^0.1.1",
    "ansi-dim": "^0.1.1",
    "prompt-radio": "^1.2.1"
  },
  "description": "List-style prompt. Can be used as a standalone prompt, or with a prompt system like [enquirer].",
  "devDependencies": {
    "choices-separator": "^2.0.0",
    "enquirer": "^1.0.3",
    "gulp-format-md": "^1.0.0",
    "mocha": "^5.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-PDao47cmC9+m2zEUghH+WIIascd8SuyyWO+akuUubd0XxOQyUH96HMdIcL3YnNS8kJUHwddH1rHVgL9vZA1QsQ==",
    "shasum": "b33472e01677a5751f59094fa7fe20b09da9db94",
    "tarball": "https://registry.npmjs.org/prompt-list/-/prompt-list-3.2.0.tgz",
    "fileCount": 4,
    "unpackedSize": 9646,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbDGJXCRA9TVsSAnZWagAAF6QP/RFnnivVMRC6rXVi1Rgl\nBMiTOFqHwt4b3hj8C0aUwD7pO/v8bufItRg1pS+Z2BJYmNbBwiY/QJzPHSv5\n1zwYHgLrkM3AwJswWe7/cAM67I+75efLnfG0BcvVvKVAQSxl8bi4XZtsprSa\nBXorsbh63inVwVmYyiZE3LYapPIx3hNi1WvWpftIF8+lpC4Pzx+Lyx2sWduk\nhvPMU7uP0nm6qtoIZqdAMCKd0Fa1/ET0SzyR8jIvbk7/viv2C/fEUevX+OdO\nmr8nwheTF5qqXSKBs/VXwM1PEWZso4oKbN8N+ctBE3bGh6TueFgeDUpi4hCV\nt6WM+l7RyLhiWAkgV+uFfoGcis/ZhCQyoam+OLOikprrkskxzi/VNFnhoPWI\nF7wGKYtlKnlyQQ4vy8SqvAJLpNF3MCepZj25uaxtJolT2Glgf8fz7uSY7lhj\n5p1XMS9lZslxbj5rWek0waRduB8camCAiiIjZEgjoP3rbgKtTfbbOOpvhQ0e\n57fpaPdEAYfDDNzyimyYWAsVv631HA/M/fpQKmGhoEYMuSDK3ITqd7XkFvyk\nWyImkOjcdclbHRv0yVYZ3v8af74fXqstiSMOKlbZcrTcwRSUp+tSDRM1pk/v\nTboJ8RXyc17cElAZLQe4hx7uM5asXwY0aWnYtbWeroHd7FkozbFiSLOc/Zxn\n/gfg\r\n=q1YS\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "4c18a263ac3d461f5e246f3da999236f72dddb5a",
  "homepage": "https://github.com/enquirer/prompt-list",
  "keywords": [
    "answer",
    "answers",
    "ask",
    "checkbox",
    "choice",
    "cli",
    "command",
    "enquirer-prompt",
    "enquirerprompt",
    "input",
    "inquire",
    "inquirer",
    "interact",
    "list",
    "menu",
    "password",
    "plugin",
    "prompt",
    "prompts",
    "question",
    "readline",
    "stdin",
    "stdout",
    "terminal",
    "tty",
    "ui"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "doowb",
      "email": "brian.woodward@gmail.com"
    },
    {
      "name": "jonschlinkert",
      "email": "github@sellside.com"
    }
  ],
  "name": "prompt-list",
  "optionalDependencies": {},
  "readme": "# prompt-list [![NPM version](https://img.shields.io/npm/v/prompt-list.svg?style=flat)](https://www.npmjs.com/package/prompt-list) [![NPM monthly downloads](https://img.shields.io/npm/dm/prompt-list.svg?style=flat)](https://npmjs.org/package/prompt-list)  [![NPM total downloads](https://img.shields.io/npm/dt/prompt-list.svg?style=flat)](https://npmjs.org/package/prompt-list) [![Linux Build Status](https://img.shields.io/travis/enquirer/prompt-list.svg?style=flat&label=Travis)](https://travis-ci.org/enquirer/prompt-list) [![Windows Build Status](https://img.shields.io/appveyor/ci/enquirer/prompt-list.svg?style=flat&label=AppVeyor)](https://ci.appveyor.com/project/enquirer/prompt-list)\n\n> List-style prompt. Can be used as a standalone prompt, or with a prompt system like [enquirer](http://enquirer.io).\n\nFollow this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), for updates on this project and others.\n\n![prompt-list example](https://raw.githubusercontent.com/enquirer/prompt-list/master/docs/example.gif)\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save prompt-list\n```\n\n## Install\n\nInstall with [npm](https://www.npmjs.com/):\n\n```sh\n$ npm install --save prompt-list\n```\n\n## Example usage\n\n```js\nvar List = require('prompt-list');\nvar list = new List({\n  name: 'order',\n  message: 'What would you like to order?',\n  // choices may be defined as an array or a function that returns an array\n  choices: [\n    'Coke',\n    'Diet Coke',\n    'Cherry Coke',\n    {name: 'Sprite', disabled: 'Temporarily unavailable'},\n    'Water'\n  ]\n});\n\n// async\nlist.ask(function(answer) {\n  console.log(answer);\n});\n\n// promise\nlist.run()\n  .then(function(answer) {\n    console.log(answer);\n  });\n```\n\n## Enquirer usage\n\nRegister the prompt as an [enquirer](http://enquirer.io) plugin:\n\n```js\nvar Enquirer = require('enquirer');\nvar enquirer = new Enquirer();\n\nenquirer.register('list', require('prompt-list'));\n```\n\n### Enquirer examples\n\nEnquirer supports both declarative, inquirer-style questions, and an expressive format, using the `.question` method:\n\n**Declarative**\n\n```js\nvar questions = [\n  {\n    type: 'list',\n    name: 'order',\n    message: 'What would you like to order?',\n    choices: [\n      'Coke',\n      'Diet Coke',\n      'Cherry Coke',\n      {name: 'Sprite', disabled: 'Temporarily unavailable'},\n      'Water'\n    ]\n  }\n];\n\nenquirer.ask(questions)\n  .then(function(answers) {\n    console.log(answers);\n  })\n  .catch(function(err) {\n    console.log(err);\n  });\n```\n\n**Expressive**\n\n```js\nenquirer.question('order', 'What would you like to order?', {\n  type: 'list',\n  choices: [\n    'Coke',\n    'Diet Coke',\n    'Cherry Coke',\n    {name: 'Sprite', disabled: 'Temporarily unavailable'},\n    'Water'\n  ]\n});\n\nenquirer.ask(['order'])\n  .then(function(answers) {\n    console.log(answers);\n  })\n  .catch(function(err) {\n    console.log(err);\n  });\n```\n\n## About\n\n### Related projects\n\nYou might also be interested in these projects:\n\n* [enquirer-prompt](https://www.npmjs.com/package/enquirer-prompt): Base prompt module used for creating custom prompt types for Enquirer. | [homepage](https://github.com/jonschlinkert/enquirer-prompt \"Base prompt module used for creating custom prompt types for Enquirer.\")\n* [enquirer-question](https://www.npmjs.com/package/enquirer-question): Question object, used by Enquirer and prompt plugins. | [homepage](https://github.com/enquirer/enquirer-question \"Question object, used by Enquirer and prompt plugins.\")\n* [enquirer](https://www.npmjs.com/package/enquirer): Intuitive, plugin-based prompt system for node.js. | [homepage](http://enquirer.io \"Intuitive, plugin-based prompt system for node.js.\")\n\n### Contributing\n\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\n\n### Contributors\n\n| **Commits** | **Contributor** |  \n| --- | --- |  \n| 45 | [jonschlinkert](https://github.com/jonschlinkert) |  \n| 6  | [doowb](https://github.com/doowb) |  \n| 3  | [albizures](https://github.com/albizures) |  \n\n### Building docs\n\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\n\nTo generate the readme, run the following command:\n\n```sh\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\n```\n\n### Running tests\n\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\n\n```sh\n$ npm install && npm test\n```\n\n### Author\n\n**Jon Schlinkert**\n\n* [github/jonschlinkert](https://github.com/jonschlinkert)\n* [twitter/jonschlinkert](https://twitter.com/jonschlinkert)\n\n### License\n\nCopyright Â© 2017, [Jon Schlinkert](https://github.com/jonschlinkert).\nReleased under the [MIT License](LICENSE).\n\n***\n\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.6.0, on December 28, 2017._",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/enquirer/prompt-list.git"
  },
  "scripts": {
    "test": "eslint . && mocha"
  },
  "verb": {
    "toc": false,
    "layout": "default",
    "tasks": [
      "readme"
    ],
    "data": {
      "alias": "list"
    },
    "plugins": [
      "gulp-format-md"
    ],
    "related": {
      "list": [
        "enquirer",
        "enquirer-prompt",
        "enquirer-question"
      ]
    },
    "lint": {
      "reflinks": true
    }
  },
  "version": "3.2.0"
}
