{
  "_args": [
    [
      {
        "raw": "mqtt-serial@^0.6.0",
        "scope": null,
        "escapedName": "mqtt-serial",
        "name": "mqtt-serial",
        "rawSpec": "^0.6.0",
        "spec": ">=0.6.0 <0.7.0",
        "type": "range"
      },
      "/home/pi/.node-red/node_modules/node-red-contrib-gpio"
    ]
  ],
  "_from": "mqtt-serial@>=0.6.0 <0.7.0",
  "_id": "mqtt-serial@0.6.0",
  "_inCache": true,
  "_location": "/mqtt-serial",
  "_nodeVersion": "0.10.33",
  "_npmUser": {
    "name": "monteslu",
    "email": "monteslu@gmail.com"
  },
  "_npmVersion": "2.10.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "mqtt-serial@^0.6.0",
    "scope": null,
    "escapedName": "mqtt-serial",
    "name": "mqtt-serial",
    "rawSpec": "^0.6.0",
    "spec": ">=0.6.0 <0.7.0",
    "type": "range"
  },
  "_requiredBy": [
    "/node-red-contrib-gpio"
  ],
  "_resolved": "https://registry.npmjs.org/mqtt-serial/-/mqtt-serial-0.6.0.tgz",
  "_shasum": "f3992a92721fc4e037982d20166cf564961b46b9",
  "_shrinkwrap": null,
  "_spec": "mqtt-serial@^0.6.0",
  "_where": "/home/pi/.node-red/node_modules/node-red-contrib-gpio",
  "author": {
    "name": "Luis Montes"
  },
  "bugs": {
    "url": "https://github.com/monteslu/mqtt-serial/issues"
  },
  "dependencies": {},
  "description": "Virtual serial device over MQTT",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "f3992a92721fc4e037982d20166cf564961b46b9",
    "tarball": "https://registry.npmjs.org/mqtt-serial/-/mqtt-serial-0.6.0.tgz"
  },
  "gitHead": "25283dcf0f494f374ed120d4db74ebdf9b111ade",
  "homepage": "https://github.com/monteslu/mqtt-serial#readme",
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "monteslu",
      "email": "monteslu@gmail.com"
    }
  ],
  "name": "mqtt-serial",
  "optionalDependencies": {},
  "readme": "mqtt-serial\n=============\n\nA virtual [node-serialport](https://github.com/voodootikigod/node-serialport) implementation that uses MQTT as the transport.\n\n\n# MQTTSerialPort\n\nUse mqtt to send/receive data to a remote physical device:\n\n```js\nvar MQTTSerialPort = require('mqtt-serial').SerialPort;\nvar mqtt = require('mqtt');\nvar firmata = require('firmata');\n\n// setup the mqtt client with port, host, and optional credentials\nvar client = mqtt.connect('mqtt://127.0.0.1:1883', {username: 'A USER', password: 'A PASSWORD'});\n\n//create the mqtt serialport and specify the send and receive topics\nvar serialPort = new MQTTSerialPort({\n  client: client,\n  transmitTopic: 'REPLACE WITH YOUR TRANSMIT TOPIC',\n  receiveTopic: 'REPLACE WITH YOUR RECEIVE TOPIC'\n});\n\n//use the virtual serial port to send a command to a firmata device\nvar board = new firmata.Board(serialPort, function (err, ok) {\n  if (err){ throw err; }\n  //light up a pin\n  board.digitalWrite(13, 1);\n});\n\n```\n\n\n# bindPhysical\n\nBind a physical serial port to receive/send data from an mqtt server:\n\n```js\nvar SerialPort = require('serialport').SerialPort;\nvar bindPhysical = require('mqtt-serial').bindPhysical;\nvar skynet = require('mqtt');\n\n// setup the mqtt client with port, host, and optional credentials\nvar client = mqtt.connect('mqtt://127.0.0.1:1883', {username: 'A USER', password: 'A PASSWORD'});\n\n// setup a connection to a physical serial port\nvar serialPort = new SerialPort('/dev/tty.usbmodem1411',{\n    baudrate: 57600,\n    buffersize: 1\n});\n\n//connects the physical device to an mqtt server\nbindPhysical({\n  serialPort: serialPort,\n  client: client,\n  transmitTopic: 'REPLACE WITH YOUR TRANSMIT TOPIC',\n  receiveTopic: 'REPLACE WITH YOUR RECEIVE TOPIC'\n});\n\n```\n",
  "readmeFilename": "Readme.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/monteslu/mqtt-serial.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.6.0"
}
